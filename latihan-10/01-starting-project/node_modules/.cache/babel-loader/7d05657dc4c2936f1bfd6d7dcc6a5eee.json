{"ast":null,"code":"var _jsxFileName = \"/Users/thoriqzs/Documents/REDUX/UDEMY/latihan-10/01-starting-project/src/App.js\";\nimport React from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // useEffect(() => {\n  //   const userLoggedIn = localStorage.getItem('isLoggedIn')\n  //   if (userLoggedIn === '1') {\n  //     setIsLoggedIn(true);\n  //   };\n  // }, []);\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   setIsLoggedIn(true);\n  //   localStorage.setItem('isLoggedIn', '1')\n  // };\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thoriqzs/Documents/REDUX/UDEMY/latihan-10/01-starting-project/src/App.js"],"names":["React","Login","Home","MainHeader","AuthContext","App","isLoggedIn","onLogout","logoutHandler","loginHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3BC,MAAAA,UAAU,EAAEA,UADe;AAE3BC,MAAAA,QAAQ,EAAEC;AAFiB,KAA7B;AAAA,4BAIE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKI;AAAA,iBACG,CAACF,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEG;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGH,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAlCQH,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n\n  // useEffect(() => {\n  //   const userLoggedIn = localStorage.getItem('isLoggedIn')\n\n  //   if (userLoggedIn === '1') {\n  //     setIsLoggedIn(true);\n  //   };\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   setIsLoggedIn(true);\n  //   localStorage.setItem('isLoggedIn', '1')\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n\n  return (\n    <AuthContext.Provider value={{\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    }}>\n      <MainHeader onLogout={logoutHandler} />\n        <main>\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n        </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}