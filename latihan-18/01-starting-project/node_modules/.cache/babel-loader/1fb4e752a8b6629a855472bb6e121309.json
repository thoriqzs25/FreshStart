{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    authentication: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store; // const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     switch(action.type) {\n//         case 'increment':\n//             return {\n//                 counter: state.counter + 1,\n//                 showCounter: state.showCounter\n//             };\n//         case 'increase':\n//             return {\n//                 counter: state.counter + action.payloads,\n//                 showCounter: state.showCounter\n//             };\n//         case 'decrement':\n//             return {\n//                 counter: state.counter - 1,\n//                 showCounter: state.showCounter\n//             };\n//         case 'toggle':\n//             return {\n//                 counter: state.counter,\n//                 showCounter: !state.showCounter\n//             }\n//         default:\n//             return state\n//     }\n// };","map":{"version":3,"sources":["/Users/thoriqzs/Documents/REDUX/UDEMY/latihan-18/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","increase","action","payload","decrement","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","authentication","counterActions","actions","authActions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,QAAQ,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACpBF,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACH,KANK;;AAONC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KATK;;AAUNY,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AACrBC,EAAAA,eAAe,EAAE;AADI,CAAzB;AAIA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,gBADoB;AAE1BC,EAAAA,YAAY,EAAES,gBAFY;AAG1BR,EAAAA,QAAQ,EAAE;AACNW,IAAAA,KAAK,CAAET,KAAF,EAAS;AACVA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACH,KAHK;;AAING,IAAAA,MAAM,CAAEV,KAAF,EAAS;AACXA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACH;;AANK;AAHgB,CAAD,CAA7B;AAaA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;AACzBqB,EAAAA,OAAO,EAAE;AAAEnB,IAAAA,OAAO,EAAEE,YAAY,CAACiB,OAAxB;AAAiCC,IAAAA,cAAc,EAAEL,SAAS,CAACI;AAA3D;AADgB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AAEP,eAAeJ,KAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = { counter: 0, showCounter: true }\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\nconst initialAuthState = {\n    isAuthenticated: false\n};\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login (state) {\n            state.isAuthenticated = true;\n        },\n        logout (state) {\n            state.isAuthenticated = false;\n        }\n    }\n});\n\nconst store = configureStore({\n    reducer: { counter: counterSlice.reducer, authentication: authSlice.reducer } \n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n\n\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     switch(action.type) {\n//         case 'increment':\n//             return {\n//                 counter: state.counter + 1,\n//                 showCounter: state.showCounter\n//             };\n\n//         case 'increase':\n//             return {\n//                 counter: state.counter + action.payloads,\n//                 showCounter: state.showCounter\n//             };\n\n//         case 'decrement':\n//             return {\n//                 counter: state.counter - 1,\n//                 showCounter: state.showCounter\n//             };\n        \n//         case 'toggle':\n//             return {\n//                 counter: state.counter,\n//                 showCounter: !state.showCounter\n//             }\n\n//         default:\n//             return state\n//     }\n// };\n\n\n\n"]},"metadata":{},"sourceType":"module"}