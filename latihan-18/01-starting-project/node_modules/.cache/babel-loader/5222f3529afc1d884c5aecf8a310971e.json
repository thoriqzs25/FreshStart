{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counter';\nimport authReducer from './auth';\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n});\nexport default store; // const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     switch(action.type) {\n//         case 'increment':\n//             return {\n//                 counter: state.counter + 1,\n//                 showCounter: state.showCounter\n//             };\n//         case 'increase':\n//             return {\n//                 counter: state.counter + action.payloads,\n//                 showCounter: state.showCounter\n//             };\n//         case 'decrement':\n//             return {\n//                 counter: state.counter - 1,\n//                 showCounter: state.showCounter\n//             };\n//         case 'toggle':\n//             return {\n//                 counter: state.counter,\n//                 showCounter: !state.showCounter\n//             }\n//         default:\n//             return state\n//     }\n// };","map":{"version":3,"sources":["/Users/thoriqzs/Documents/REDUX/UDEMY/latihan-18/01-starting-project/src/store/index.js"],"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,QAAxB;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AACzBI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEJ,cAAX;AAA2BK,IAAAA,IAAI,EAAEJ;AAAjC;AADgB,CAAD,CAA5B;AAGA,eAAeC,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counter';\nimport authReducer from './auth';\n\nconst store = configureStore({\n    reducer: { counter: counterReducer, auth: authReducer } \n});\nexport default store;\n\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     switch(action.type) {\n//         case 'increment':\n//             return {\n//                 counter: state.counter + 1,\n//                 showCounter: state.showCounter\n//             };\n\n//         case 'increase':\n//             return {\n//                 counter: state.counter + action.payloads,\n//                 showCounter: state.showCounter\n//             };\n\n//         case 'decrement':\n//             return {\n//                 counter: state.counter - 1,\n//                 showCounter: state.showCounter\n//             };\n        \n//         case 'toggle':\n//             return {\n//                 counter: state.counter,\n//                 showCounter: !state.showCounter\n//             }\n\n//         default:\n//             return state\n//     }\n// };\n\n\n\n"]},"metadata":{},"sourceType":"module"}