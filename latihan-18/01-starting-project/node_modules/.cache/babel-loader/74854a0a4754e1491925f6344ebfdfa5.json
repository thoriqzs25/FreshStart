{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/thoriqzs/Documents/REDUX/UDEMY/latihan-18/01-starting-project/src/store/counter.js"],"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","increase","action","payload","decrement","toggleCounter","counterActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,QAAQ,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACpBF,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACH,KANK;;AAONC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KATK;;AAUNY,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,OAAO,MAAMY,cAAc,GAAGX,YAAY,CAACY,OAApC;AAEP,eAAeZ,YAAY,CAACa,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true }\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default counterSlice.reducer;"]},"metadata":{},"sourceType":"module"}