{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store; // const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     switch(action.type) {\n//         case 'increment':\n//             return {\n//                 counter: state.counter + 1,\n//                 showCounter: state.showCounter\n//             };\n//         case 'increase':\n//             return {\n//                 counter: state.counter + action.payloads,\n//                 showCounter: state.showCounter\n//             };\n//         case 'decrement':\n//             return {\n//                 counter: state.counter - 1,\n//                 showCounter: state.showCounter\n//             };\n//         case 'toggle':\n//             return {\n//                 counter: state.counter,\n//                 showCounter: !state.showCounter\n//             }\n//         default:\n//             return state\n//     }\n// };","map":{"version":3,"sources":["/Users/thoriqzs/Documents/REDUX/UDEMY/latihan-18/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","increase","action","payload","decrement","toggleCounter","store","reducer","counterActions","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAC,SADwB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,QAAQ,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACpBF,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBQ,MAAM,CAACC,OAAvC;AACH,KANK;;AAONC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KATK;;AAUNW,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAoBA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AACzBe,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAApC;AAEP,eAAeH,KAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter: true }\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\n\nconst store = configureStore({\n    reducer: counterSlice.reducer \n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n\n\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     switch(action.type) {\n//         case 'increment':\n//             return {\n//                 counter: state.counter + 1,\n//                 showCounter: state.showCounter\n//             };\n\n//         case 'increase':\n//             return {\n//                 counter: state.counter + action.payloads,\n//                 showCounter: state.showCounter\n//             };\n\n//         case 'decrement':\n//             return {\n//                 counter: state.counter - 1,\n//                 showCounter: state.showCounter\n//             };\n        \n//         case 'toggle':\n//             return {\n//                 counter: state.counter,\n//                 showCounter: !state.showCounter\n//             }\n\n//         default:\n//             return state\n//     }\n// };\n\n\n\n"]},"metadata":{},"sourceType":"module"}